#include <iostream>
#include <string>
#include "AVLTree.cpp"

int main(void)
{
    AVLTree tree;

    int A[1000] = { 878, 378, 26, 160, 167, 688, 151, 795, 995, 180, 362, 307, 276, 789, 587, 353, 858, 586, 881, 316, 153, 396, 961, 792, 41, 491, 578, 383, 420, 824, 112, 62, 832, 519, 755, 101, 922, 278, 756, 678, 244, 482, 155, 554, 564, 947, 171, 200, 768, 188, 334, 513, 451, 281, 655, 386, 373, 154, 938, 771, 757, 972, 156, 388, 70, 752, 907, 317, 40, 563, 533, 80, 187, 897, 854, 454, 369, 331, 57, 299, 888, 715, 672, 893, 621, 44, 935, 393, 121, 145, 166, 666, 323, 865, 991, 128, 762, 948, 283, 635, 549, 669, 494, 320, 19, 30, 879, 898, 337, 727, 20, 59, 436, 481, 301, 227, 664, 889, 416, 890, 605, 791, 523, 571, 943, 495, 673, 660, 16, 129, 470, 908, 776, 887, 236, 264, 614, 212, 499, 333, 56, 974, 137, 988, 681, 15, 528, 512, 402, 516, 644, 298, 557, 568, 567, 326, 835, 74, 478, 413, 428, 318, 359, 255, 619, 162, 465, 537, 926, 315, 716, 728, 374, 198, 647, 322, 93, 233, 826, 565, 553, 547, 690, 803, 685, 467, 903, 572, 453, 990, 743, 759, 749, 955, 273, 985, 524, 412, 891, 923, 561, 884, 258, 109, 371, 622, 183, 872, 247, 983, 457, 466, 483, 202, 657, 584, 577, 721, 899, 304, 581, 37, 437, 868, 993, 600, 83, 602, 505, 714, 526, 866, 559, 508, 195, 693, 797, 794, 668, 642, 799, 328, 732, 161, 999, 290, 419, 604, 32, 461, 811, 541, 123, 998, 345, 846, 382, 860, 472, 769, 958, 848, 530, 628, 593, 82, 240, 208, 314, 945, 124, 271, 580, 414, 763, 552, 611, 96, 28, 915, 173, 649, 5, 982, 683, 45, 341, 598, 241, 855, 287, 932,1000, 535, 184, 529, 460, 545, 14, 69, 704, 204, 411, 235, 175, 52, 209, 144, 473, 733, 916, 295, 321, 700, 646, 777, 246, 78, 994, 544, 31, 785, 820, 265, 480, 468, 912, 390, 748, 701, 870, 179, 910, 840, 192, 469, 22, 968, 875, 446, 709, 108, 417, 643, 754, 641, 904, 351, 475, 679, 790, 976, 591, 522, 172, 223, 933, 793, 288, 197, 648, 531, 291, 360, 823, 435, 924, 867, 946, 802, 612, 142, 308, 405, 989, 444, 775, 920, 139, 12, 953, 805, 268, 372, 699, 118, 861, 71, 438, 633, 348, 599, 624, 940, 779, 613, 698, 720, 239, 960, 272, 440, 653, 100, 928, 506, 387, 952, 827, 107, 842, 140, 913, 214, 476, 636, 474, 385, 869, 433, 896, 439, 687, 900, 877, 280, 941, 297, 969, 442, 725, 702, 445, 380, 252, 168, 177, 95, 625, 663, 980, 249, 734, 574, 705, 813, 458, 366, 245, 822, 206, 27, 521, 87, 92, 289, 745, 986, 311, 367, 18, 426, 652, 696, 141, 656, 871, 590, 54, 409, 772, 36, 847, 905, 770, 558, 538, 816, 262, 250, 852, 936, 228, 163, 199, 857, 159, 864, 717, 43, 102, 843, 815, 957, 856, 723, 157, 729, 650, 597, 404, 706, 640, 34, 375, 504, 98, 620, 230, 238, 106, 76, 381, 408, 818, 766, 115, 931, 839, 736, 464, 812, 9, 400, 185, 111, 680, 750, 939, 201, 539, 377, 257, 189, 895, 218, 68, 17, 306, 569, 38, 463, 47, 186, 146, 970, 73, 424, 737, 786, 601, 164, 618, 722, 609, 742, 880, 639, 692, 285, 630, 979, 182, 398, 962, 174, 210, 595, 511, 394, 282, 97, 423, 498, 488, 486, 397, 760, 829, 894, 79, 89, 432, 997, 844, 104, 500, 909, 638, 225, 130, 540, 787, 501, 814, 780, 676, 573, 399, 674, 892, 562, 368, 686, 335, 224, 796, 509, 152, 863, 391, 689, 313, 134, 178, 592, 886, 758, 515, 833, 234, 629, 48, 65, 119, 447, 493, 7, 845, 514, 671, 274, 169, 487, 730, 981, 332, 631, 77, 764, 455, 64, 103, 556, 665, 661, 603, 422, 615, 132, 927, 807, 355, 1, 560, 51, 828, 449, 548, 971, 136, 735, 788, 275, 319, 389, 23, 286, 191, 711, 819, 738, 190, 303, 851, 570, 149, 114, 94, 279, 497, 126, 503, 434, 917, 551, 292, 339, 248, 566, 712, 39, 395, 181, 350, 707, 632, 259, 309, 340, 588, 427, 418, 60, 967, 403, 29, 651, 517, 849, 148, 269, 430, 477, 489, 902, 456, 256, 85, 217, 859, 364, 637, 479, 583, 329, 462, 253, 677, 724, 876, 81, 53, 617, 623, 376, 783, 147, 448, 626, 575, 194, 42, 996, 72, 761, 594, 35, 384, 767, 110, 576, 834, 739, 532, 116, 774, 8, 765, 91, 122, 978, 158, 885, 964, 726, 930, 751, 58, 746, 143, 520, 873, 607, 810, 356, 977, 914, 392, 492, 662, 691, 627, 502, 536, 659, 471, 608, 925, 951, 310, 670, 117, 950, 4, 3, 125, 401, 634, 782, 261, 24, 862, 216, 667, 806, 966, 370, 207, 358, 221, 949, 874, 49, 113, 485, 975, 46, 336, 596, 921, 421, 120, 703, 937, 33, 838, 918, 694, 713, 992, 585, 75, 237, 270, 808, 211, 99, 682, 518, 836, 55, 484, 658, 232, 325, 138, 21, 718, 243, 550, 219, 929, 883, 837, 312, 330, 25, 450, 266, 801, 684, 346, 731, 327, 133, 610, 708, 338, 344, 90, 645, 88, 63, 347, 778, 546, 263, 784, 582, 850, 507, 305, 753, 226, 821, 798, 135, 2, 804, 379, 365, 349, 944, 165, 11, 357, 284, 407, 410, 781, 296, 6, 277, 740, 363, 654, 606, 105, 525, 965, 954, 956, 527, 919, 13, 260, 589, 984, 441, 963, 242, 267, 324, 254, 343, 431, 934, 911, 695, 231, 697, 131, 747, 542, 84, 831, 50, 170, 302, 973, 429, 987, 251, 67, 425, 352, 294, 342, 825, 906, 193, 229, 10, 800, 841, 86, 616, 579, 744, 354, 61, 196, 675, 452, 510, 406, 543, 496, 773, 415, 959, 205, 901, 490, 361, 203, 215, 220, 459, 534, 300, 222, 443, 882, 66, 719, 942, 555, 809, 293, 127, 150, 710, 817, 830, 176, 853, 213, 741 };
    for (int i = 0; i < 1000; i++)
    {
        tree.insert(A[i]);
        tree.getHeight();
        tree.getSize();
        tree.getRoot();
        tree.empty();
        int* t = tree.traversal();
        delete[] t;
    }
    
    //tree.erase(3);
    /*
    int* data = tree.traversal();
    for (int i = 0; i < tree.getSize(); i++) std::cout << data[i] << " ";
    std::cout << std::endl;
    
    data = tree.traversal();
    for (int i = 0; i < tree.getSize(); i++) std::cout << data[i] << " ";
    std::cout << std::endl;

    tree.erase(1);
    data = tree.traversal();
    for (int i = 0; i < tree.getSize(); i++) std::cout << data[i] << " ";
    std::cout << std::endl;

    tree.erase(2);
    data = tree.traversal();
    for (int i = 0; i < tree.getSize(); i++) std::cout << data[i] << " ";
    std::cout << std::endl;*/

    
    //tree.output();
}